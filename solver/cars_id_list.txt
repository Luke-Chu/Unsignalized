30: [3, 8, 1, 2, 4, 12, 5, 6, 10, 13, 9, 18, 7, 11, 15, 17, 16, 21, 14, 23, 20, 19, 22, 24, 25, 27, 28, 26, 30, 29]

先来先服务算法：
初始次序：[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
初始总延时：518.9293056388722
最优次序：[3, 8, 10, 1, 4, 12, 13, 2, 16, 25, 30, 5, 23, 9, 18, 7, 29, 6, 19, 11, 15, 21, 14, 22, 17, 20, 28, 26, 24, 27]
最小总延时：317.7851454709058

改进的先来先服务算法：
初始次序：[3, 8, 1, 2, 4, 12, 5, 6, 10, 13, 9, 18, 7, 11, 15, 17, 16, 21, 14, 23, 20, 19, 22, 24, 25, 27, 28, 26, 30, 29]
初始总延时：389.7851454709058
最优次序：[3, 8, 10, 13, 2, 1, 16, 12, 5, 7, 4, 9, 18, 6, 11, 19, 15, 21, 22, 14, 20, 26, 24, 25, 29, 28, 30, 23, 17, 27]
最小总延时：317.7851454709058

优化的深度优先生成树：
初始次序：[1, 2, 3, 7, 4, 10, 5, 11, 8, 6, 12, 9, 13, 14, 15, 17, 16, 19, 18, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30]
初始总延时：332.9293056388722
最优次序：[3, 8, 13, 10, 2, 1, 14, 5, 23, 9, 6, 4, 7, 19, 11, 20, 15, 16, 25, 30, 22, 12, 21, 18, 29, 17, 28, 26, 24, 27]
最小总延时：317.7851454709058

最大匹配算法：
初始次序：[1, 2, 3, 10, 4, 14, 5, 7, 8, 6, 9, 11, 12, 16, 13, 20, 15, 19, 17, 24, 18, 21, 22, 25, 23, 30, 27, 26, 28, 29]
初始总延时：328.35663542291536
最优次序：[3, 8, 10, 1, 6, 7, 12, 2, 5, 16, 14, 20, 19, 24, 4, 11, 22, 9, 27, 17, 13, 26, 25, 15, 21, 18, 23, 30, 29, 28]
最小总延时：317.78514547090583

50辆车最大匹配算法：
初始次序：[5, 1, 2, 12, 3, 7, 4, 11, 6, 8, 9, 29, 10, 40, 13, 16, 14, 18, 20, 15, 19, 17, 21, 23, 22, 25, 28, 24, 26, 42, 27, 34, 30, 35, 31, 37, 32, 33, 36, 41, 38, 44, 39, 49, 45, 43, 48, 46, 47, 50]
初始总延时：936.8437132573486
最优次序：[5, 11, 4, 3, 12, 2, 18, 21, 15, 8, 10, 6, 20, 9, 1, 30, 7, 14, 33, 44, 13, 16, 22, 32, 46, 19, 17, 28, 24, 34, 23, 39, 26, 29, 35, 45, 37, 38, 40, 42, 50, 47, 48, 25, 41, 43, 27, 49, 31, 36]
最小总延时：994.4190124475103